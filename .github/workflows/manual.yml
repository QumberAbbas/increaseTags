name: Manual workflow

on:
  workflow_dispatch:
    

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  publishApp:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
          fetch-depth: 0
        
    - name: Fetch Next Release Version
      id: fetch_upcoming_release_version
      run: |
          VERSION=$(grep '^version=' version.properties | cut -d'=' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Check Release Branch Existence
      id: check_branch
      run: |
        if git show-ref --verify --quiet "refs/remotes/origin/release/${{ env.VERSION }}"; then
          echo "branch_exists=true" >> $GITHUB_ENV
        else
          echo "branch_exists=false" >> $GITHUB_ENV
        fi        
        
    - name: Increase App Minor Version if upcoming release branch is already created
      id: increase_app_version
      if: success() && steps.check_branch.outputs.branch_exists == 'true'
      run: |
        major_version=$(echo "$env.CURRENT_TAG" | cut -d. -f1)
        minor_version=$(echo "$env.CURRENT_TAG" | cut -d. -f2)
        patch_version=$(echo "$env.CURRENT_TAG" | cut -d. -f3)
        ((minor_version++))
        UPCOMING_RELEASE_VERSION="${major_version}.${minor_version}.${patch_version}"
        NEW_TAG="${UPCOMING_RELEASE_VERSION}-alpha.0"
        echo "TAG=$NEW_TAG" >> $GITHUB_ENV
          
    - name: Increase Tag and Publish
      if: steps.increase_app_version.outcome == 'skipped'
      run: |
          TAG=$(git tag --list "$VERSION-alpha.*" --sort=-version:refname | head -n 1)
          NEW_TAG=$(echo "$TAG" | awk -F'[-.]' '{print $1"."$2"."$3"-alpha."$5 + 1}')
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: Push Git Tag
      run: |
          git config user.name "Scoober GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag ${{env.NEW_TAG}}
          git push origin ${{env.NEW_TAG}}
      
    - name: Print new tag
      id: create_tag
      run: echo "${{ env.NEW_TAG}}"
      
