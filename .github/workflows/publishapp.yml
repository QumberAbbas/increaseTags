name: Build and Publish to Staging
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+-alpha+.[0-9]+"

jobs:
  build-and-deploy-to-stage:
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Commit Data
        run: |
          echo "Commit SHA: ${{ github.sha }}"
          echo "Owner: ${{ github.repository_owner }}"
          echo "Repo: ${{ github.event.repository.name }}"
          
      - name: Get Pull Request data
        id: get_pr_data
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const response = await github.rest.repos.listPullRequestsAssociatedWithCommit({
            commit_sha: context.sha,
            owner: context.repo.owner,
            repo: context.repo.repo
            });
            
            if (response.data.length > 0) {
              const prTitle = response.data[0].title;
              console.log(prTitle);
              const ticketNumberRegex = /\[([A-Za-z]+-\d+)\]/; // Regex to extract ticket number like [SCAT-1234]
              const matches = prTitle.match(ticketNumberRegex);
              const ticketNumber = matches ? matches[1] : null;
                if (ticketNumber) {
                  console.log(`Ticket number: ${ticketNumber}`);
                  return ticketNumber
                } else {
                  console.log('No ticket number found in the title.');
                }
            } else {
              throw new Error('No pull request found for the commit SHA.');
            }
            
      - name: Pull Request data
        run: |
          echo "TICKET_NUMBER=${{steps.get_pr_data.outputs.result}}" >> $GITHUB_ENV
      
      - name: Set App Name for Staging Build 
        id: get_version
        run: echo "VERSION_NUMBER_CI=$(echo $GITHUB_REF | sed -n 's/refs\/tags\///p')-[${{ env.TICKET_NUMBER }}]" >> $GITHUB_ENV
      
      - name: Print Version
        id: print_version
        run: echo "${{env.VERSION_NUMBER_CI}}"
      
